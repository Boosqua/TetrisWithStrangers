/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/game/game.ts":
/*!**************************!*\
  !*** ./src/game/game.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
var FONTSTYLE = "Oswald";
var Game = /** @class */ (function () {
    function Game(canvas) {
        this.ctx = canvas.getContext('2d');
        this.width = canvas.width;
        this.height = canvas.height;
        this.startRunning = false;
        this.startAnimation = null;
        this.gridScale = canvas.width / 10;
        this.animate = this.animate.bind(this);
        this.animate();
    }
    Game.prototype.animate = function () {
        requestAnimationFrame(this.animate);
        this.ctx.clearRect(0, 0, this.width, this.height);
        this.ctx.fillStyle = "grey";
        this.ctx.fillRect(0, this.gridScale * 4, this.width, this.height);
        this.drawGrid();
        if (!this.startRunning) {
            this.startRunning = true;
            this.startAnimation = this.animateStartValues();
        }
        this.ctx.fillStyle = "black";
        this.ctx.font = this.startAnimation.size + "px " + FONTSTYLE;
        this.ctx.textAlign = "center";
        // this.ctx.fillText(this.startAnimation.value, this.width / 2, this.height / 2)
        this.ctx.shadowColor = "blue";
        this.ctx.shadowBlur = 10;
        this.ctx.shadowOffsetX = -3;
        this.ctx.shadowOffsetY = 3;
        this.ctx.fillText(this.startAnimation.value, this.width / 2, this.height / 2);
        this.ctx.shadowBlur = 0;
        this.ctx.shadowOffsetX = 0;
        this.ctx.shadowOffsetY = 0;
    };
    Game.prototype.animateStartValues = function () {
        console.log(this.width);
        var fontSize = this.width * .25;
        var animation = { value: "3 . . .", size: fontSize };
        var decrement = setInterval(function () { animation.size -= fontSize * .05; }, 40);
        setTimeout(function () {
            animation.value = "2 . . .";
            animation.size = fontSize;
        }, 1000);
        setTimeout(function () {
            animation.value = "1 . . .";
            animation.size = fontSize;
        }, 2000);
        setTimeout(function () {
            animation.value = "START";
            animation.size = fontSize * 1.2;
            clearInterval(decrement);
        }, 3000);
        setTimeout(function () {
            animation.value = "";
        }, 3700);
        return animation;
    };
    Game.prototype.drawGrid = function () {
        var i = 0;
        while (i <= this.width) {
            this.ctx.beginPath();
            this.ctx.strokeStyle = 'black';
            this.ctx.moveTo(i, 0);
            this.ctx.lineTo(i, this.height);
            this.ctx.stroke();
            i += this.gridScale;
        }
    };
    return Game;
}());
exports.default = Game;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
var game_1 = __webpack_require__(/*! ./game/game */ "./src/game/game.ts");
document.addEventListener("DOMContentLoaded", function () {
    var canvas = document.getElementById("game");
    canvas.height = window.innerHeight * .80;
    var adjust = canvas.height / 24 * 10;
    canvas.width = adjust;
    var game = new game_1.default(canvas);
    // TESTING
    // GRID
    var width = canvas.width;
    var ctx = canvas.getContext('2d');
    var height = canvas.height;
    var gridScale = canvas.width / 10;
    var i = 0;
    while (i <= width) {
        ctx.beginPath();
        ctx.strokeStyle = 'black';
        ctx.moveTo(i, 0);
        ctx.lineTo(i, height);
        ctx.stroke();
        i += gridScale;
    }
    // PIECES
    // LONG PIECE;
    function drawLongPiece(ctx) {
        var pos = [width / 5, 300];
        var center = [pos[0], pos[1] + gridScale * 2];
        var moves = {
            1: function () {
                ctx.beginPath();
                ctx.strokeStyle = "red";
                ctx.fillStyle = "red";
                ctx.moveTo.apply(ctx, center);
                ctx.lineTo(center[0], center[1] + gridScale * 2);
                ctx.lineTo(center[0] + gridScale, center[1] + gridScale * 2);
                ctx.lineTo(center[0] + gridScale, center[1] - gridScale * 2);
                ctx.lineTo(center[0], center[1] - gridScale * 2);
                ctx.lineTo.apply(ctx, center);
                ctx.fill();
                ctx.stroke();
            },
            2: function () {
                ctx.beginPath();
                ctx.strokeStyle = "green";
                ctx.moveTo.apply(ctx, center);
                ctx.lineTo(center[0] + gridScale * 2, center[1]);
                ctx.lineTo(center[0] + gridScale * 2, center[1] + gridScale);
                ctx.lineTo(center[0] - gridScale * 2, center[1] + gridScale);
                ctx.lineTo(center[0] - gridScale * 2, center[1]);
                ctx.lineTo.apply(ctx, center);
                ctx.stroke();
            },
            3: function () {
            },
            4: function () {
            }
        };
        // moves[1]();
        // moves[2]();
    }
    drawLongPiece(ctx);
});


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.ts");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXRyaXMtd2l0aC1zdHJhbmdlcnMvLi9zcmMvZ2FtZS9nYW1lLnRzIiwid2VicGFjazovL3RldHJpcy13aXRoLXN0cmFuZ2Vycy8uL3NyYy9pbmRleC50cyIsIndlYnBhY2s6Ly90ZXRyaXMtd2l0aC1zdHJhbmdlcnMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdGV0cmlzLXdpdGgtc3RyYW5nZXJzL3dlYnBhY2svc3RhcnR1cCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFNLFNBQVMsR0FBVyxRQUFRLENBQUM7QUFFbkM7SUFRRyxjQUFZLE1BQXlCO1FBQ2xDLElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQTZCLENBQUM7UUFDL0QsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzFCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM1QixJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUMxQixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxLQUFLLEdBQUcsRUFBRTtRQUNsQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN0QyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVELHNCQUFPLEdBQVA7UUFDRyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ25DLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFD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Q0QsY0FBYztRQUNkLGNBQWM7SUFDakIsQ0FBQztJQUNELGFBQWEsQ0FBQyxHQUFHLENBQUM7QUFDckIsQ0FBQyxDQUFDOzs7Ozs7O1VDM0VGO1VBQ0E7O1VBRUE7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBOztVQUVBO1VBQ0E7O1VBRUE7VUFDQTtVQUNBOzs7VUNyQkE7VUFDQTtVQUNBO1VBQ0EiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRk9OVFNUWUxFOiBzdHJpbmcgPSBcIk9zd2FsZFwiO1xuaW50ZXJmYWNlIHN0YXJ0VmFsdWVzeyB2YWx1ZTogc3RyaW5nLCBzaXplOiBudW1iZXJ9XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lIHtcbiAgIGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEXG4gICB3aWR0aDogbnVtYmVyO1xuICAgaGVpZ2h0OiBudW1iZXI7XG4gICBzdGFydEFuaW1hdGlvbjogc3RhcnRWYWx1ZXM7XG4gICBzdGFydFJ1bm5pbmc6IGJvb2xlYW47XG4gICBncmlkU2NhbGU6IG51bWJlclxuXG4gICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KXtcbiAgICAgIHRoaXMuY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJykgYXMgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xuICAgICAgdGhpcy53aWR0aCA9IGNhbnZhcy53aWR0aDtcbiAgICAgIHRoaXMuaGVpZ2h0ID0gY2FudmFzLmhlaWdodDtcbiAgICAgIHRoaXMuc3RhcnRSdW5uaW5nID0gZmFsc2U7XG4gICAgICB0aGlzLnN0YXJ0QW5pbWF0aW9uID0gbnVsbDtcbiAgICAgIHRoaXMuZ3JpZFNjYWxlID0gY2FudmFzLndpZHRoIC8gMTBcbiAgICAgIHRoaXMuYW5pbWF0ZSA9IHRoaXMuYW5pbWF0ZS5iaW5kKHRoaXMpXG4gICAgICB0aGlzLmFuaW1hdGUoKTtcbiAgIH1cblxuICAgYW5pbWF0ZSgpOiB2b2lke1xuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0ZSlcbiAgICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSBcImdyZXlcIjtcbiAgICAgIHRoaXMuY3R4LmZpbGxSZWN0KDAsIHRoaXMuZ3JpZFNjYWxlICogNCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xuICAgICAgdGhpcy5kcmF3R3JpZCgpO1xuICAgICAgaWYoIXRoaXMuc3RhcnRSdW5uaW5nKXtcbiAgICAgICAgIHRoaXMuc3RhcnRSdW5uaW5nID0gdHJ1ZTtcbiAgICAgICAgIHRoaXMuc3RhcnRBbmltYXRpb24gPSB0aGlzLmFuaW1hdGVTdGFydFZhbHVlcygpO1xuICAgICAgfVxuICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gXCJibGFja1wiXG4gICAgICB0aGlzLmN0eC5mb250ID0gYCR7dGhpcy5zdGFydEFuaW1hdGlvbi5zaXplfXB4ICR7Rk9OVFNUWUxFfWA7XG4gICAgICB0aGlzLmN0eC50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xuICAgICAgLy8gdGhpcy5jdHguZmlsbFRleHQodGhpcy5zdGFydEFuaW1hdGlvbi52YWx1ZSwgdGhpcy53aWR0aCAvIDIsIHRoaXMuaGVpZ2h0IC8gMilcbiAgICAgIHRoaXMuY3R4LnNoYWRvd0NvbG9yID0gXCJibHVlXCI7XG4gICAgICB0aGlzLmN0eC5zaGFkb3dCbHVyID0gMTA7XG4gICAgICB0aGlzLmN0eC5zaGFkb3dPZmZzZXRYID0gLTM7XG4gICAgICB0aGlzLmN0eC5zaGFkb3dPZmZzZXRZID0gMztcbiAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KHRoaXMuc3RhcnRBbmltYXRpb24udmFsdWUsIHRoaXMud2lkdGggLyAyLCB0aGlzLmhlaWdodCAvIDIpXG4gICAgICB0aGlzLmN0eC5zaGFkb3dCbHVyID0gMDtcbiAgICAgIHRoaXMuY3R4LnNoYWRvd09mZnNldFggPSAwO1xuICAgICAgdGhpcy5jdHguc2hhZG93T2Zmc2V0WSA9IDBcbiAgIH1cbiAgIGFuaW1hdGVTdGFydFZhbHVlcygpOiBzdGFydFZhbHVlcyB7XG4gICAgICBjb25zb2xlLmxvZyggdGhpcy53aWR0aClcbiAgICAgIGxldCBmb250U2l6ZTogbnVtYmVyID0gdGhpcy53aWR0aCAqIC4yNVxuICAgICAgY29uc3QgYW5pbWF0aW9uOiBzdGFydFZhbHVlcyA9IHt2YWx1ZTogXCIzIC4gLiAuXCIsIHNpemU6IGZvbnRTaXplfVxuICAgICAgbGV0IGRlY3JlbWVudCA9IHNldEludGVydmFsKCgpID0+IHsgYW5pbWF0aW9uLnNpemUgLT0gZm9udFNpemUgKiAuMDV9LCA0MClcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgYW5pbWF0aW9uLnZhbHVlID0gXCIyIC4gLiAuXCJcbiAgICAgICAgIGFuaW1hdGlvbi5zaXplID0gZm9udFNpemU7XG4gICAgICB9LCAxMDAwKVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICBhbmltYXRpb24udmFsdWUgPSBcIjEgLiAuIC5cIlxuICAgICAgICAgYW5pbWF0aW9uLnNpemUgPSBmb250U2l6ZTtcbiAgICAgIH0sIDIwMDApXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgIGFuaW1hdGlvbi52YWx1ZSA9IFwiU1RBUlRcIlxuICAgICAgICAgYW5pbWF0aW9uLnNpemUgPSBmb250U2l6ZSAqIDEuMjtcbiAgICAgICAgIGNsZWFySW50ZXJ2YWwoZGVjcmVtZW50KVxuICAgICAgfSwgMzAwMClcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgYW5pbWF0aW9uLnZhbHVlID0gXCJcIlxuICAgICAgfSwgMzcwMClcbiAgICAgIHJldHVybiBhbmltYXRpb247XG4gICB9XG4gICBkcmF3R3JpZCgpOnZvaWR7XG4gICAgICBsZXQgaTogbnVtYmVyID0gMDtcblxuICAgICAgd2hpbGUoIGkgPD0gdGhpcy53aWR0aCl7XG4gICAgICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgIHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gJ2JsYWNrJztcbiAgICAgICAgIHRoaXMuY3R4Lm1vdmVUbyhpLCAwKTtcbiAgICAgICAgIHRoaXMuY3R4LmxpbmVUbyhpLCB0aGlzLmhlaWdodCk7XG4gICAgICAgICB0aGlzLmN0eC5zdHJva2UoKTtcbiAgICAgICAgIGkgKz0gdGhpcy5ncmlkU2NhbGU7XG4gICAgICB9XG4gICB9XG59XG4iLCJpbXBvcnQgR2FtZSAgZnJvbSBcIi4vZ2FtZS9nYW1lXCJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgIGxldCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdhbWVcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XG4gICBjYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0ICogLjgwO1xuICAgbGV0IGFkanVzdCA9IGNhbnZhcy5oZWlnaHQgLyAyNCAqIDEwXG4gICBjYW52YXMud2lkdGggPSBhZGp1c3RcbiAgIGNvbnN0IGdhbWU6IEdhbWUgPSBuZXcgR2FtZShjYW52YXMpXG4gICAvLyBURVNUSU5HXG4gICAvLyBHUklEXG4gICBjb25zdCB3aWR0aDogbnVtYmVyID0gY2FudmFzLndpZHRoO1xuICAgbGV0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpIGFzIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcbiAgIGNvbnN0IGhlaWdodDogbnVtYmVyID0gY2FudmFzLmhlaWdodDtcbiAgIGNvbnN0IGdyaWRTY2FsZTogbnVtYmVyID0gY2FudmFzLndpZHRoIC8gMTA7XG4gICBsZXQgaTogbnVtYmVyID0gMDtcblxuICAgd2hpbGUoIGkgPD0gd2lkdGgpe1xuICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJ2JsYWNrJztcbiAgICAgIGN0eC5tb3ZlVG8oaSwgMCk7XG4gICAgICBjdHgubGluZVRvKGksIGhlaWdodCk7XG4gICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICBpICs9IGdyaWRTY2FsZTtcbiAgIH1cblxuXG4gICAvLyBQSUVDRVNcbiAgIC8vIExPTkcgUElFQ0U7XG4gICBmdW5jdGlvbiBkcmF3TG9uZ1BpZWNlKGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKTogdm9pZCB7XG4gICAgICBsZXQgcG9zOiBBcnJheTxudW1iZXI+ID0gW3dpZHRoIC8gNSwgMzAwXVxuICAgICAgY29uc3QgY2VudGVyOiBbbnVtYmVyLCBudW1iZXJdID0gW3Bvc1swXSwgcG9zWzFdICsgZ3JpZFNjYWxlICogMl1cbiAgICAgIGludGVyZmFjZSBkcmF3RnVuY3tcbiAgICAgICAgICgpOiB2b2lkXG4gICAgICB9XG4gICAgICBpbnRlcmZhY2UgbW92ZXMge1xuICAgICAgICAgMTogZHJhd0Z1bmMsXG4gICAgICAgICAyOiBkcmF3RnVuYyxcbiAgICAgICAgIDM6IGRyYXdGdW5jLFxuICAgICAgICAgNDogZHJhd0Z1bmNcbiAgICAgIH1cbiAgICAgIGNvbnN0IG1vdmVzOiBtb3ZlcyA9IHtcbiAgICAgICAgIDE6ICgpID0+IHsgLy8gc3Bhd25pbmcgcG9zaXRpb25cbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IFwicmVkXCI7XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gXCJyZWRcIjtcbiAgICAgICAgICAgIGN0eC5tb3ZlVG8oLi4uY2VudGVyKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oY2VudGVyWzBdLCBjZW50ZXJbMV0gKyBncmlkU2NhbGUgKiAyKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oY2VudGVyWzBdICsgZ3JpZFNjYWxlLCBjZW50ZXJbMV0gKyBncmlkU2NhbGUgKiAyKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oY2VudGVyWzBdICsgZ3JpZFNjYWxlLCBjZW50ZXJbMV0gLSBncmlkU2NhbGUgKiAyKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oY2VudGVyWzBdLCBjZW50ZXJbMV0gLSBncmlkU2NhbGUgKiAyKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oLi4uY2VudGVyKVxuICAgICAgICAgICAgY3R4LmZpbGwoKVxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpXG4gICAgICAgICB9LFxuICAgICAgICAgMjogKCkgPT4ge1xuICAgICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCJncmVlblwiO1xuICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyguLi5jZW50ZXIpO1xuICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhjZW50ZXJbMF0gKyBncmlkU2NhbGUgKiAyLCBjZW50ZXJbMV0pO1xuICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhjZW50ZXJbMF0gKyBncmlkU2NhbGUgKiAyLCBjZW50ZXJbMV0gKyBncmlkU2NhbGUpO1xuICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhjZW50ZXJbMF0gLSBncmlkU2NhbGUgKiAyLCBjZW50ZXJbMV0gKyBncmlkU2NhbGUpO1xuICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhjZW50ZXJbMF0gLSBncmlkU2NhbGUgKiAyLCBjZW50ZXJbMV0pXG4gICAgICAgICAgICAgICBjdHgubGluZVRvKC4uLmNlbnRlcik7XG4gICAgICAgICAgICAgICBjdHguc3Ryb2tlKClcbiAgICAgICAgIH0sXG4gICAgICAgICAzOiAoKSA9PiB7XG5cbiAgICAgICAgIH0sXG4gICAgICAgICA0OiAoKSA9PiB7XG5cbiAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIG1vdmVzWzFdKCk7XG4gICAgICAvLyBtb3Zlc1syXSgpO1xuICAgfVxuICAgZHJhd0xvbmdQaWVjZShjdHgpXG59KSIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGVcbl9fd2VicGFja19yZXF1aXJlX18oXCIuL3NyYy9pbmRleC50c1wiKTtcbi8vIFRoaXMgZW50cnkgbW9kdWxlIHVzZWQgJ2V4cG9ydHMnIHNvIGl0IGNhbid0IGJlIGlubGluZWRcbiJdLCJzb3VyY2VSb290IjoiIn0=